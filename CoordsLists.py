#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Dec 10 18:13:20 2020

@author: 4472245
"""
# this script imports the csv file with coordinates generated by R script and converts it to lists of positive negative and stroma cells both
# contaning the mark (the cell type in the 3rd position) and unmarked (just x,y coords)


#-------- import libraries needed -----------
import os,json
import csv

#---- verify  if the files are already generated, if not, generate the empty lists for the negative, positve and stroma lists --------

if os.path.isfile('allList.txt'):
    with open('allList.txt', 'r') as f:
        allList = json.loads(f.read())
else:
    allList = []

if os.path.isfile('StromaList.txt'):
    with open('StromaList.txt', 'r') as fffs:
        StromaList = json.loads(fffs.read())
else:
    StromaList = []
       
           
if os.path.isfile('PositiveList.txt'):
    with open('PositiveList.txt', 'r') as f_f:
        PositiveList = json.loads(f_f.read())
else:
        PositiveList = []

if os.path.isfile('NegativeList.txt'):
    with open('NegativeList.txt', 'r') as f_ff:
        NegativeList = json.loads(f_ff.read())
else:
        NegativeList = []
        

print(len(PositiveList)/(len(PositiveList) + len(NegativeList)))        

        

#----- if the lists are empty, load the files containig the number of the sample and generate the lists--------

if len(StromaList) == 0:# orlen(allList) ==0 or len(NegativeListNoMark) ==0:
    myfile = open("number.txt", "r")
    number  = ""
    for line in myfile:
      stripped_line = line.rstrip()
      number += stripped_line
    myfile.close()
    

    with open(number+'_Converted_coordinates_DIAMETER_TRUE.csv', newline='') as csvfile:
          reader = csv.DictReader(csvfile)
          for row in reader:
              allList.append([float(row['X']), float(row['Y']), row['class_label']])
             
    for j in allList:
        if j[2] ==  'BrdU_neg':
             NegativeList.append(j)
        #     NegativeListNoMark.append([j[0],j[1]])
        elif j[2] == "BrdU_pos":
                 PositiveList.append(j)
        #         PositiveListNoMark.append([j[0],j[1]])
        if j[2] == "Stroma":
            StromaList.append(j)
           # StromaListNoMark.append([j[0],j[1]])
                             

    if os.path.isfile('allList.txt'):
        with open('allList.txt', 'w') as f:
            f.write(json.dumps(allList))
    else:
        with open('allList.txt', 'w') as f:
            f.write(json.dumps(allList))
            
    allList = []


    if os.path.isfile('StromaList.txt'):
        with open('StromaList.txt', 'w') as fffs:
            fffs.write(json.dumps(StromaList))
    else:
        with open('StromaList.txt', 'w') as fffs:
            fffs.write(json.dumps(StromaList))

    # if os.path.isfile('StromaListSmall.txt'):
    #     with open('StromaListSmall.txt', 'w') as fff:
    #         fff.write(json.dumps(StromaListSmall))
    # else:
    #     with open('StromaListSmall.txt', 'w') as fff:
    #         fff.write(json.dumps(StromaListSmall))
                   
    if os.path.isfile('PositiveList.txt'):
        with open('PositiveList.txt', 'w') as f_f:
            f_f.write(json.dumps(PositiveList))
    else:
        with open('PositiveList.txt', 'w') as f_f:
            f_f.write(json.dumps(PositiveList))
    
    if os.path.isfile('NegativeList.txt'):
        with open('NegativeList.txt', 'w') as f_ff:
            f_ff.write(json.dumps(NegativeList))
    else:
        with open('NegativeList.txt', 'w') as f_ff:
            f_ff.write(json.dumps(NegativeList))

    # if os.path.isfile('StromaListNoMark.txt'):
    #     with open('StromaListNoMark.txt', 'w') as fff1:
    #         fff1.write(json.dumps(StromaListNoMark))
    # else:
    #     with open('StromaListNoMark.txt', 'w') as fff1:
    #         fff1.write(json.dumps(StromaListNoMark))
                   
    # if os.path.isfile('PositiveListNoMark.txt'):
    #     with open('PositiveListNoMark.txt', 'w') as f_f1:
    #         f_f1.write(json.dumps(PositiveListNoMark))
    # else:
    #     with open('PositiveListNoMark.txt', 'w') as f_f1:
    #         f_f1.write(json.dumps(PositiveListNoMark))
    
    # if os.path.isfile('NegativeListNoMark.txt'):
    #     with open('NegativeListNoMark.txt', 'w') as f_ff1:
    #         f_ff1.write(json.dumps(NegativeListNoMark))
    # else:
    #     with open('NegativeListNoMark.txt', 'w') as f_ff1:
    #         f_ff1.write(json.dumps(NegativeListNoMark))
            
print(len(PositiveList)/(len(PositiveList) + len(NegativeList)))

